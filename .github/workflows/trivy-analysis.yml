# This workflow is used to build & scan image using trivy vulnerability scanner and upload the results to github security tab

name: Build & Vulnerability Scan using Trivy Scanner

on:
  push:
    branches: [ main, release/* ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main, release/*]
  workflow_dispatch:
    branches: [ main, release/*, feature/*]

jobs:
  build-scan-image:
    name: Build & Scan Image
    runs-on: ubuntu-24.04
    env:
      BASIC_AUTH_USER: ${{ secrets.BASIC_AUTH_USER }}
      BASIC_AUTH_PASS: ${{ secrets.BASIC_AUTH_PASS }}
      GENERIC_AGENCY_ID: ${{secrets.GENERIC_AGENCY_ID}}
      GENERIC_PART_ID: ${{secrets.GENERIC_PART_ID}}
      FORM_PARAM_IDX: ${{secrets.FORM_PARAM_IDX}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK build environment
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      # Runs build steps
      - name: Maven Package
        run: mvn -ntp clean package

      - name: Maven Verify
        run: mvn -ntp clean verify

      - name: Build image jag-jci-application from Dockerfile
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          CONTEXT: ./jag-jci-application
        run: |
          docker build -t docker.io/jci/jag-jci-application:${{ github.sha }} ${CONTEXT}

      #Run Vulnerability Scan usinig Trivy scanner
      - name: Run Trivy vulnerability scanner for jag-jci-application image
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: image
          image-ref: docker.io/jci/jag-jci-application:${{ github.sha }}
          format: sarif
          output: trivy-results.sarif
          exit-code: 1
          ignore-unfixed: true
          limit-severities-for-sarif: true
          severity: HIGH,CRITICAL
      
      - name: Build image jag-jci-application-secure from Dockerfile
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          CONTEXT: ./jag-jci-application-secure
        run: |
          docker build -t docker.io/jci/jag-jci-application-secure:${{ github.sha }} ${CONTEXT}

      #Run Vulnerability Scan usinig Trivy scanner
      - name: Run Trivy vulnerability scanner for jag-jci-application-secure image
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: image
          image-ref: docker.io/jci/jag-jci-application-secure:${{ github.sha }}
          format: sarif
          output: trivy-results.sarif
          exit-code: 1
          ignore-unfixed: true
          limit-severities-for-sarif: true
          severity: HIGH,CRITICAL

      #Upload results to the Github security tab.
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif
